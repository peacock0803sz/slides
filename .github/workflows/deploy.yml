on:
  push:
    branches:
      - main
    paths:
      - "talks/**"
      - ".github/workflows/deploy.yml"
      - "!talks/_drafts/**"

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      talks: ${{ steps.result.outputs.result }}
    steps:
      - uses: actions/checkout@v4

      - id: filter
        uses: dorny/paths-filter@v3
        with:
          list-files: "json"
          predicate-quantifier: "every"
          filters: |
            talks: 
              - "talks/**"
              - "!talks/_drafts/**"
      - id: result
        shell: bash
        run: |
          export _out=$(echo '${{ steps.filter.outputs.talks_files }}' | jq -cr '[.[] | sub("talks\/(?<x>([0-9a-z_-])+)\/.*"; "\(.x)")] | unique')
          echo "result=$_out" >> "$GITHUB_OUTPUT"

  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      AWS_REGION: ap-northeast-1
      AWS_ROLE_ARN: arn:aws:iam::981709652793:role/PipelineUploadS3
      S3_BUCKET: s3://slides.peacock0803sz.com
      CF_DISTRIBUTION_ID: E2T87ZLQYFG0XY

    needs: changes
    if: ${{ needs.changes.outputs.talks != '[]' }}
    strategy:
      matrix:
        talk_dir: ${{ fromJSON(needs.changes.outputs.talks) }}
    steps:
      - uses: actions/checkout@v4

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - uses: pnpm/action-setup@v4
        with:
          version: "9.7.1"
      - uses: actions/setup-node@v4
        with:
          cache: "pnpm"
          node-version: "20"

      - name: "Build and Publish"
        shell: bash
        working-directory: talks/${{ matrix.talk_dir }}
        env:
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TALK_DIR: ${{ matrix.talk_dir }}
        run: |
          echo "//npm.pkg.github.com/:_authToken=$NPM_TOKEN" >> .npmrc
          pnpm install
          pnpm exec playwright install --with-deps
          mkdir -p ./dist/
          pnpm run build:aws
          pnpm run render:cover
          export TALK_SLUG=$(echo $TALK_DIR | sed -E 's/[0-9]{4}-[0-9]{2}-[0-9]{2}_//g')
          aws s3 sync ./dist "$S3_BUCKET/$TALK_SLUG/"
          aws cloudfront create-invalidation --distribution-id $CF_DISTRIBUTION_ID --paths "/$TALK_SLUG/*"
